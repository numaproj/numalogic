name: PyPi Publish

on:
  push:
    tags:
      - v*
jobs:
  numalogic-core:
    if: github.repository == 'numaproj/numalogic'
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: ./libs/numalogic-core
    name: numalogic-core
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'
      - name: Install build & twine
        run: >-
          pip install
          build twine
          --user
      - name: Build wheel
        run: python -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish
        run: twine upload -r testpypi -p ${{ secrets.TEST_PYPI_PASSWORD }} dist/*
  numalogic-connectors:
    if: github.repository == 'numaproj/numalogic'
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: ./libs/numalogic-connectors
    name: numalogic-connectors
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'
      - name: Install build & twine
        run: >-
          pip install
          build twine
          --user
      - name: Build wheel
        run: python -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish
        run: twine upload -r testpypi -p ${{ secrets.TEST_PYPI_PASSWORD }} dist/*
  numalogic-registry:
    if: github.repository == 'numaproj/numalogic'
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: ./libs/numalogic-registry
    name: numalogic-registry
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'
      - name: Install build & twine
        run: >-
          pip install
          build twine
          --user
      - name: Build wheel
        run: python -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish
        run: twine upload -r testpypi -p ${{ secrets.TEST_PYPI_PASSWORD }} dist/*
